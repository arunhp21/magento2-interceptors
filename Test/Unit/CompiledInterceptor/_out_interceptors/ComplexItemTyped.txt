namespace Creatuity\Interception\Test\Unit\Custom\Module\Model\ComplexItemTyped;

use Magento\Framework\Config\ScopeInterface;
use Magento\Framework\ObjectManagerInterface;

/**
 * Interceptor class for @see \Creatuity\Interception\Test\Unit\Custom\Module\Model\ComplexItemTyped
 */
class Interceptor extends \Creatuity\Interception\Test\Unit\Custom\Module\Model\ComplexItemTyped
{
    /**
     * @var ScopeInterface
     */
    private $____scope = null;

    /**
     * @var ObjectManagerInterface
     */
    private $____om = null;

    /**
     * @var \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Complex
     */
    private $____plugin_complex_plugin = null;

    /**
     * @var \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Advanced
     */
    private $____plugin_advanced_plugin = null;

    /**
     * {@inheritdoc}
     */
    public function __construct()
    {
        $____om = \Magento\Framework\App\ObjectManager::getInstance()->get(\Magento\Framework\ObjectManagerInterface::class);
        //TODO fix di in production mode
        $____scope = \Magento\Framework\App\ObjectManager::getInstance()->get(\Magento\Framework\Config\ScopeInterface::class);
        //TODO fix di in production mode
        $this->____om = $____om;
        $this->____scope = $____scope;
    }

    /**
     * {@inheritdoc}
     */
    public function returnVoid() : void
    {
        switch($this->____scope->getCurrentScope()){
        	case 'backend':
        		parent::returnVoid();
        		
        		(($tmp = $this->____plugin_complex_plugin()->afterReturnVoid($this, $result)) !== null) ? $tmp : $result;
        	default:
        		parent::returnVoid();
        }
    }

    /**
     * {@inheritdoc}
     */
    public function getNullableValue() : string
    {
        switch($this->____scope->getCurrentScope()){
        	case 'backend':
        		$result = parent::getNullableValue();
        		
        		return $this->____plugin_complex_plugin()->afterGetNullableValue($this, $result);
        	default:
        		return parent::getNullableValue();
        }
    }

    /**
     * {@inheritdoc}
     */
    public function getName() : string
    {
        switch($this->____scope->getCurrentScope()){
        	case 'backend':
        		$this->____plugin_advanced_plugin()->beforeGetName($this);
        		
        		$result = $this->____plugin_advanced_plugin()->aroundGetName($this, function(){
        			$result = $this->____plugin_complex_plugin()->aroundGetName($this, function(){
        				return parent::getName();
        			});
        			
        			return $this->____plugin_complex_plugin()->afterGetName($this, $result);
        		});
        		
        		return $this->____plugin_advanced_plugin()->afterGetName($this, $result);
        	default:
        		return parent::getName();
        }
    }

    /**
     * {@inheritdoc}
     */
    public function setValue(string $value)
    {
        switch($this->____scope->getCurrentScope()){
        	case 'backend':
        		$beforeResult = $this->____plugin_complex_plugin()->beforeSetValue($this, $value);
        		if ($beforeResult !== null) list($value) = (array)$beforeResult;
        		
        		return $this->____plugin_complex_plugin()->aroundSetValue($this, function($value){
        			return parent::setValue($value);
        		}, $value);
        	default:
        		return parent::setValue($value);
        }
    }

    /**
     * {@inheritdoc}
     */
    public function firstVariadicParameter(string ... $variadicValue)
    {
        switch($this->____scope->getCurrentScope()){
        	case 'backend':
        		return $this->____plugin_complex_plugin()->aroundFirstVariadicParameter($this, function($variadicValue){
        			return parent::firstVariadicParameter($variadicValue);
        		}, $variadicValue);
        	default:
        		return parent::firstVariadicParameter($variadicValue);
        }
    }

    /**
     * {@inheritdoc}
     */
    public function secondVariadicParameter(string $value, string ... $variadicValue)
    {
        switch($this->____scope->getCurrentScope()){
        	case 'backend':
        		return $this->____plugin_complex_plugin()->aroundSecondVariadicParameter($this, function($value, $variadicValue){
        			return parent::secondVariadicParameter($value, $variadicValue);
        		}, $value, $variadicValue);
        	default:
        		return parent::secondVariadicParameter($value, $variadicValue);
        }
    }

    /**
     * {@inheritdoc}
     */
    public function byRefVariadic(string &... $variadicValue)
    {
        switch($this->____scope->getCurrentScope()){
        	case 'backend':
        		return $this->____plugin_complex_plugin()->aroundByRefVariadic($this, function(&$variadicValue){
        			return parent::byRefVariadic($variadicValue);
        		}, $variadicValue);
        	default:
        		return parent::byRefVariadic($variadicValue);
        }
    }

    /**
     * plugin "complex_plugin"
     * @return \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Complex
     */
    public function ____plugin_complex_plugin()
    {
        if ($this->____plugin_complex_plugin === null) {
        	$this->____plugin_complex_plugin = $this->____om->get(\Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Complex::class);
        }
        return $this->____plugin_complex_plugin;
    }

    /**
     * plugin "advanced_plugin"
     * @return \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Advanced
     */
    public function ____plugin_advanced_plugin()
    {
        if ($this->____plugin_advanced_plugin === null) {
        	$this->____plugin_advanced_plugin = $this->____om->get(\Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Advanced::class);
        }
        return $this->____plugin_advanced_plugin;
    }
}
