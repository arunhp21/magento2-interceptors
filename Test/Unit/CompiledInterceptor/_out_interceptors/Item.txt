namespace Creatuity\Interception\Test\Unit\Custom\Module\Model\Item;

use Magento\Framework\Config\ScopeInterface;
use Magento\Framework\ObjectManagerInterface;

/**
 * Interceptor class for @see \Creatuity\Interception\Test\Unit\Custom\Module\Model\Item
 */
class Interceptor extends \Creatuity\Interception\Test\Unit\Custom\Module\Model\Item
{
    /**
     * @var ScopeInterface
     */
    private $____scope = null;

    /**
     * @var ObjectManagerInterface
     */
    private $____om = null;

    /**
     * @var \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Simple
     */
    private $____plugin_simple_plugin = null;

    /**
     * @var \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Advanced
     */
    private $____plugin_advanced_plugin = null;

    /**
     * {@inheritdoc}
     */
    public function __construct()
    {
        $____om = \Magento\Framework\App\ObjectManager::getInstance()->get(\Magento\Framework\ObjectManagerInterface::class);
        //TODO fix di in production mode
        $____scope = \Magento\Framework\App\ObjectManager::getInstance()->get(\Magento\Framework\Config\ScopeInterface::class);
        //TODO fix di in production mode
        $this->____om = $____om;
        $this->____scope = $____scope;
    }

    /**
     * {@inheritdoc}
     */
    public function getName()
    {
        switch($this->____scope->getCurrentScope()){
        	case 'global':
        	case 'emptyscope':
        		$result = parent::getName();
        		
        		return $this->____plugin_simple_plugin()->afterGetName($this, $result);
        	case 'backend':
        		$this->____plugin_advanced_plugin()->beforeGetName($this);
        		
        		$result = $this->____plugin_advanced_plugin()->aroundGetName($this, function(){
        			$result = parent::getName();
        			
        			return $this->____plugin_simple_plugin()->afterGetName($this, $result);
        		});
        		
        		return $this->____plugin_advanced_plugin()->afterGetName($this, $result);
        	default:
        		return parent::getName();
        }
    }

    /**
     * plugin "simple_plugin"
     * @return \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Simple
     */
    public function ____plugin_simple_plugin() : \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Simple
    {
        if ($this->____plugin_simple_plugin === null) {
        	$this->____plugin_simple_plugin = $this->____om->get(\Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Simple::class);
        }
        return $this->____plugin_simple_plugin;
    }

    /**
     * plugin "advanced_plugin"
     * @return \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Advanced
     */
    public function ____plugin_advanced_plugin() : \Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Advanced
    {
        if ($this->____plugin_advanced_plugin === null) {
        	$this->____plugin_advanced_plugin = $this->____om->get(\Creatuity\Interception\Test\Unit\Custom\Module\Model\ItemPlugin\Advanced::class);
        }
        return $this->____plugin_advanced_plugin;
    }
}
